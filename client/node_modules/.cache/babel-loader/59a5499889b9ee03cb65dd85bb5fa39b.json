{"ast":null,"code":"import { setISOWeek } from \"../../../setISOWeek.mjs\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\"; // ISO week of year\n\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n\n      case \"Io\":\n        return match.ordinalNumber(dateString, {\n          unit: \"week\"\n        });\n\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\"y\", \"Y\", \"u\", \"q\", \"Q\", \"M\", \"L\", \"w\", \"d\", \"D\", \"e\", \"c\", \"t\", \"T\"];\n}","map":{"version":3,"names":["setISOWeek","startOfISOWeek","numericPatterns","Parser","parseNDigits","parseNumericPattern","ISOWeekParser","priority","parse","dateString","token","match","week","ordinalNumber","unit","length","validate","_date","value","set","date","_flags","incompatibleTokens"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.mjs"],"sourcesContent":["import { setISOWeek } from \"../../../setISOWeek.mjs\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,yBAA3B;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,cAAlD,C,CAEA;;AACA,OAAO,MAAMC,aAAN,SAA4BH,MAA5B,CAAmC;EACxCI,QAAQ,GAAG,GAAH;;EAERC,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoBC,KAApB,EAA2B;IAC9B,QAAQD,KAAR;MACE,KAAK,GAAL;QACE,OAAOL,mBAAmB,CAACH,eAAe,CAACU,IAAjB,EAAuBH,UAAvB,CAA1B;;MACF,KAAK,IAAL;QACE,OAAOE,KAAK,CAACE,aAAN,CAAoBJ,UAApB,EAAgC;UAAEK,IAAI,EAAE;QAAR,CAAhC,CAAP;;MACF;QACE,OAAOV,YAAY,CAACM,KAAK,CAACK,MAAP,EAAeN,UAAf,CAAnB;IANJ;EAQD;;EAEDO,QAAQ,CAACC,KAAD,EAAQC,KAAR,EAAe;IACrB,OAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;EACD;;EAEDC,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeH,KAAf,EAAsB;IACvB,OAAOjB,cAAc,CAACD,UAAU,CAACoB,IAAD,EAAOF,KAAP,CAAX,CAArB;EACD;;EAEDI,kBAAkB,GAAG,CACnB,GADmB,EAEnB,GAFmB,EAGnB,GAHmB,EAInB,GAJmB,EAKnB,GALmB,EAMnB,GANmB,EAOnB,GAPmB,EAQnB,GARmB,EASnB,GATmB,EAUnB,GAVmB,EAWnB,GAXmB,EAYnB,GAZmB,EAanB,GAbmB,EAcnB,GAdmB,CAAH;AAtBsB"},"metadata":{},"sourceType":"module"}