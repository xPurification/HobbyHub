{"ast":null,"code":"import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarYears } from \"./differenceInCalendarYears.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\n\nexport function differenceInYears(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(differenceInCalendarYears(_dateLeft, _dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n\n  _dateLeft.setFullYear(1584);\n\n  _dateRight.setFullYear(1584); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n\n  const isLastYearNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n  const result = sign * (difference - +isLastYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n} // Fallback for modularized imports:\n\nexport default differenceInYears;","map":{"version":3,"names":["compareAsc","differenceInCalendarYears","toDate","differenceInYears","dateLeft","dateRight","_dateLeft","_dateRight","sign","difference","Math","abs","setFullYear","isLastYearNotFull","result"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/node_modules/date-fns/differenceInYears.mjs"],"sourcesContent":["import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarYears } from \"./differenceInCalendarYears.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\nexport function differenceInYears(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(differenceInCalendarYears(_dateLeft, _dateRight));\n\n  // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n  _dateLeft.setFullYear(1584);\n  _dateRight.setFullYear(1584);\n\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastYearNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n  const result = sign * (difference - +isLastYearNotFull);\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInYears;\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,yBAAT,QAA0C,iCAA1C;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA2BC,QAA3B,EAAqCC,SAArC,EAAgD;EACrD,MAAMC,SAAS,GAAGJ,MAAM,CAACE,QAAD,CAAxB;;EACA,MAAMG,UAAU,GAAGL,MAAM,CAACG,SAAD,CAAzB;;EAEA,MAAMG,IAAI,GAAGR,UAAU,CAACM,SAAD,EAAYC,UAAZ,CAAvB;EACA,MAAME,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASV,yBAAyB,CAACK,SAAD,EAAYC,UAAZ,CAAlC,CAAnB,CALqD,CAOrD;EACA;;EACAD,SAAS,CAACM,WAAV,CAAsB,IAAtB;;EACAL,UAAU,CAACK,WAAX,CAAuB,IAAvB,EAVqD,CAYrD;EACA;;;EACA,MAAMC,iBAAiB,GAAGb,UAAU,CAACM,SAAD,EAAYC,UAAZ,CAAV,KAAsC,CAACC,IAAjE;EACA,MAAMM,MAAM,GAAGN,IAAI,IAAIC,UAAU,GAAG,CAACI,iBAAlB,CAAnB,CAfqD,CAiBrD;;EACA,OAAOC,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;AACD,C,CAED;;AACA,eAAeX,iBAAf"},"metadata":{},"sourceType":"module"}