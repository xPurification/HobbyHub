{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n\n  const _date = constructFrom(date, 0);\n\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n\n  _date.setHours(0, 0, 0, 0);\n\n  return _date;\n} // Fallback for modularized imports:\n\nexport default startOfYear;","map":{"version":3,"names":["toDate","constructFrom","startOfYear","date","cleanDate","_date","setFullYear","getFullYear","setHours"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/node_modules/date-fns/startOfYear.mjs"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EAChC,MAAMC,SAAS,GAAGJ,MAAM,CAACG,IAAD,CAAxB;;EACA,MAAME,KAAK,GAAGJ,aAAa,CAACE,IAAD,EAAO,CAAP,CAA3B;;EACAE,KAAK,CAACC,WAAN,CAAkBF,SAAS,CAACG,WAAV,EAAlB,EAA2C,CAA3C,EAA8C,CAA9C;;EACAF,KAAK,CAACG,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;;EACA,OAAOH,KAAP;AACD,C,CAED;;AACA,eAAeH,WAAf"},"metadata":{},"sourceType":"module"}