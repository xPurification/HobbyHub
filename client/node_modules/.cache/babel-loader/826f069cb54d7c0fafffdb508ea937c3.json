{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The month index (0-11)\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport function getMonth(date) {\n  const _date = toDate(date);\n\n  const month = _date.getMonth();\n\n  return month;\n} // Fallback for modularized imports:\n\nexport default getMonth;","map":{"version":3,"names":["toDate","getMonth","date","_date","month"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/node_modules/date-fns/getMonth.mjs"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The month index (0-11)\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nexport function getMonth(date) {\n  const _date = toDate(date);\n  const month = _date.getMonth();\n  return month;\n}\n\n// Fallback for modularized imports:\nexport default getMonth;\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EAC7B,MAAMC,KAAK,GAAGH,MAAM,CAACE,IAAD,CAApB;;EACA,MAAME,KAAK,GAAGD,KAAK,CAACF,QAAN,EAAd;;EACA,OAAOG,KAAP;AACD,C,CAED;;AACA,eAAeH,QAAf"},"metadata":{},"sourceType":"module"}