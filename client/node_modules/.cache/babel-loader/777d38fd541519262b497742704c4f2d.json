{"ast":null,"code":"import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\"\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, {\n          width: \"abbreviated\"\n        });\n      // A, B\n\n      case \"GGGGG\":\n        return localize.era(era, {\n          width: \"narrow\"\n        });\n      // Anno Domini, Before Christ\n\n      case \"GGGG\":\n      default:\n        return localize.era(era, {\n          width: \"wide\"\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: \"year\"\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, {\n        unit: \"year\"\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, {\n          unit: \"quarter\"\n        });\n      // Q1, Q2, Q3, Q4\n\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case \"qo\":\n        return localize.ordinalNumber(quarter, {\n          unit: \"quarter\"\n        });\n      // Q1, Q2, Q3, Q4\n\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\"\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, {\n          unit: \"month\"\n        });\n      // Jan, Feb, ..., Dec\n\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // J, F, ..., D\n\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // January, February, ..., December\n\n      case \"MMMM\":\n      default:\n        return localize.month(month, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, {\n          unit: \"month\"\n        });\n      // Jan, Feb, ..., Dec\n\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // J, F, ..., D\n\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // January, February, ..., December\n\n      case \"LLLL\":\n      default:\n        return localize.month(month, {\n          width: \"wide\",\n          context: \"standalone\"\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, {\n        unit: \"week\"\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, {\n        unit: \"week\"\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), {\n        unit: \"date\"\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: \"dayOfYear\"\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: \"day\"\n        });\n\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: \"day\"\n        });\n\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // T\n\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // Tu\n\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\"\n        });\n      // Tuesday\n\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\"\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: \"day\"\n        });\n      // Tue\n\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n\n      case \"aaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }).toLowerCase();\n\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n\n      case \"bbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }).toLowerCase();\n\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: \"hour\"\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), {\n        unit: \"hour\"\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, {\n        unit: \"hour\"\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, {\n        unit: \"hour\"\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), {\n        unit: \"minute\"\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), {\n        unit: \"second\"\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case \"XXXX\":\n      case \"XX\":\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case \"xxxx\":\n      case \"xx\":\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset) {\n  let delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset) {\n  let delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}","map":{"version":3,"names":["getDayOfYear","getISOWeek","getISOWeekYear","getWeek","getWeekYear","addLeadingZeros","lightFormatters","dayPeriodEnum","am","pm","midnight","noon","morning","afternoon","evening","night","formatters","G","date","token","localize","era","getFullYear","width","y","signedYear","year","ordinalNumber","unit","Y","options","signedWeekYear","weekYear","twoDigitYear","length","R","isoWeekYear","u","Q","quarter","Math","ceil","getMonth","String","context","q","M","month","L","w","week","I","isoWeek","d","getDate","D","dayOfYear","E","dayOfWeek","getDay","day","e","localDayOfWeek","weekStartsOn","c","i","isoDayOfWeek","a","hours","getHours","dayPeriodEnumValue","dayPeriod","toLowerCase","b","B","h","H","K","k","m","getMinutes","s","getSeconds","S","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","timestamp","trunc","getTime","T","offset","delimiter","sign","absOffset","abs","minutes"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/node_modules/date-fns/_lib/format/formatters.mjs"],"sourcesContent":["import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}