{"ast":null,"code":"import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar ISO weeks\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * const result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\n\nexport function differenceInCalendarISOWeeks(dateLeft, dateRight) {\n  const startOfISOWeekLeft = startOfISOWeek(dateLeft);\n  const startOfISOWeekRight = startOfISOWeek(dateRight);\n  const timestampLeft = +startOfISOWeekLeft - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\n  const timestampRight = +startOfISOWeekRight - getTimezoneOffsetInMilliseconds(startOfISOWeekRight); // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n\n  return Math.round((timestampLeft - timestampRight) / millisecondsInWeek);\n} // Fallback for modularized imports:\n\nexport default differenceInCalendarISOWeeks;","map":{"version":3,"names":["millisecondsInWeek","startOfISOWeek","getTimezoneOffsetInMilliseconds","differenceInCalendarISOWeeks","dateLeft","dateRight","startOfISOWeekLeft","startOfISOWeekRight","timestampLeft","timestampRight","Math","round"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/node_modules/date-fns/differenceInCalendarISOWeeks.mjs"],"sourcesContent":["import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar ISO weeks\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * const result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\nexport function differenceInCalendarISOWeeks(dateLeft, dateRight) {\n  const startOfISOWeekLeft = startOfISOWeek(dateLeft);\n  const startOfISOWeekRight = startOfISOWeek(dateRight);\n\n  const timestampLeft =\n    +startOfISOWeekLeft - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\n  const timestampRight =\n    +startOfISOWeekRight - getTimezoneOffsetInMilliseconds(startOfISOWeekRight);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInWeek);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarISOWeeks;\n"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,iBAAnC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,+BAAT,QAAgD,4CAAhD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,4BAAT,CAAsCC,QAAtC,EAAgDC,SAAhD,EAA2D;EAChE,MAAMC,kBAAkB,GAAGL,cAAc,CAACG,QAAD,CAAzC;EACA,MAAMG,mBAAmB,GAAGN,cAAc,CAACI,SAAD,CAA1C;EAEA,MAAMG,aAAa,GACjB,CAACF,kBAAD,GAAsBJ,+BAA+B,CAACI,kBAAD,CADvD;EAEA,MAAMG,cAAc,GAClB,CAACF,mBAAD,GAAuBL,+BAA+B,CAACK,mBAAD,CADxD,CANgE,CAShE;EACA;EACA;;EACA,OAAOG,IAAI,CAACC,KAAL,CAAW,CAACH,aAAa,GAAGC,cAAjB,IAAmCT,kBAA9C,CAAP;AACD,C,CAED;;AACA,eAAeG,4BAAf"},"metadata":{},"sourceType":"module"}