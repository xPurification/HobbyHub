{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devon\\\\OneDrive\\\\Documents\\\\GitHub\\\\final-project-xPurification\\\\client\\\\src\\\\pages\\\\ViewPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewPost = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    const fetchPost = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select().eq('id', id).single();\n      setPost(data);\n    };\n\n    const fetchComments = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('Posts').select('comments').eq('id', id);\n\n      if (error) {\n        console.error('Error fetching comments:', error.message);\n      } else {\n        setComments(data[0].comments || []);\n      }\n    };\n\n    fetchPost();\n    fetchComments(); // Call fetchComments here\n  }, [id]);\n\n  const handleChange = event => {\n    setNewComment(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!newComment.trim()) return;\n    const updatedComments = [...comments, newComment];\n    await supabase.from('Posts').update({\n      comments: updatedComments\n    }).eq('id', id);\n    setComments(updatedComments);\n    setNewComment('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ViewPost\",\n    children: post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created at: \", post.created_at]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), post.imageURL && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.imageURL,\n        alt: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Upvotes: \", post.upvotes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/edit/${id}`,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"3\",\n          cols: \"50\",\n          value: newComment,\n          onChange: handleChange,\n          placeholder: \"Add a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: comment\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewPost, \"vYcnaA+MtnxynjUJ4gBxZblTQco=\", false, function () {\n  return [useParams];\n});\n\n_c = ViewPost;\nexport default ViewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","supabase","ViewPost","id","post","setPost","comments","setComments","newComment","setNewComment","fetchPost","data","from","select","eq","single","fetchComments","error","console","message","handleChange","event","target","value","handleSubmit","preventDefault","trim","updatedComments","update","created_at","title","content","imageURL","upvotes","length","map","comment","index"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/src/pages/ViewPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { supabase } from '../client';\r\n\r\nconst ViewPost = () => {\r\n    const { id } = useParams();\r\n    const [post, setPost] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            const { data } = await supabase\r\n                .from('Posts')\r\n                .select()\r\n                .eq('id', id)\r\n                .single();\r\n\r\n            setPost(data);\r\n        };\r\n\r\n        const fetchComments = async () => {\r\n            const { data, error } = await supabase\r\n                .from('Posts')\r\n                .select('comments')\r\n                .eq('id', id);\r\n\r\n            if (error) {\r\n                console.error('Error fetching comments:', error.message);\r\n            } else {\r\n                setComments(data[0].comments || []);\r\n            }\r\n        };\r\n\r\n        fetchPost();\r\n        fetchComments(); // Call fetchComments here\r\n    }, [id]);\r\n\r\n    const handleChange = (event) => {\r\n        setNewComment(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!newComment.trim()) return;\r\n\r\n        const updatedComments = [...comments, newComment];\r\n\r\n        await supabase.from('Posts').update({ comments: updatedComments }).eq('id', id);\r\n\r\n        setComments(updatedComments);\r\n        setNewComment('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"ViewPost\">\r\n            {post ? (\r\n                <div>\r\n                    <p>Created at: {post.created_at}</p>\r\n                    <h1>{post.title}</h1>\r\n                    <p>{post.content}</p>\r\n                    {post.imageURL && <img src={post.imageURL} alt=\"Post\" />}\r\n                    <p>Upvotes: {post.upvotes}</p>\r\n                    <Link to={`/edit/${id}`}>Edit</Link>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <textarea\r\n                            rows=\"3\"\r\n                            cols=\"50\"\r\n                            value={newComment}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Add a comment...\"\r\n                        ></textarea>\r\n                        <br />\r\n                        <button type=\"submit\">Submit</button>\r\n                    </form>\r\n                    <div>\r\n                        <h2>Comments:</h2>\r\n                        {comments.length > 0 ? (\r\n                            <ul>\r\n                                {comments.map((comment, index) => (\r\n                                    <li key={index}>{comment}</li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>No comments yet.</p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}