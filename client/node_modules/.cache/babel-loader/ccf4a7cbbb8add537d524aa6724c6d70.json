{"ast":null,"code":"import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarISOWeekYears } from \"./differenceInCalendarISOWeekYears.mjs\";\nimport { subISOWeekYears } from \"./subISOWeekYears.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full ISO week-numbering years\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * const result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\n\nexport function differenceInISOWeekYears(dateLeft, dateRight) {\n  let _dateLeft = toDate(dateLeft);\n\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(differenceInCalendarISOWeekYears(_dateLeft, _dateRight));\n  _dateLeft = subISOWeekYears(_dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  const isLastISOWeekYearNotFull = Number(compareAsc(_dateLeft, _dateRight) === -sign);\n  const result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n} // Fallback for modularized imports:\n\nexport default differenceInISOWeekYears;","map":{"version":3,"names":["compareAsc","differenceInCalendarISOWeekYears","subISOWeekYears","toDate","differenceInISOWeekYears","dateLeft","dateRight","_dateLeft","_dateRight","sign","difference","Math","abs","isLastISOWeekYearNotFull","Number","result"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/node_modules/date-fns/differenceInISOWeekYears.mjs"],"sourcesContent":["import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarISOWeekYears } from \"./differenceInCalendarISOWeekYears.mjs\";\nimport { subISOWeekYears } from \"./subISOWeekYears.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full ISO week-numbering years\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * const result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\nexport function differenceInISOWeekYears(dateLeft, dateRight) {\n  let _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(\n    differenceInCalendarISOWeekYears(_dateLeft, _dateRight),\n  );\n  _dateLeft = subISOWeekYears(_dateLeft, sign * difference);\n\n  // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastISOWeekYearNotFull = Number(\n    compareAsc(_dateLeft, _dateRight) === -sign,\n  );\n  const result = sign * (difference - isLastISOWeekYearNotFull);\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInISOWeekYears;\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,gCAAT,QAAiD,wCAAjD;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,wBAAT,CAAkCC,QAAlC,EAA4CC,SAA5C,EAAuD;EAC5D,IAAIC,SAAS,GAAGJ,MAAM,CAACE,QAAD,CAAtB;;EACA,MAAMG,UAAU,GAAGL,MAAM,CAACG,SAAD,CAAzB;;EAEA,MAAMG,IAAI,GAAGT,UAAU,CAACO,SAAD,EAAYC,UAAZ,CAAvB;EACA,MAAME,UAAU,GAAGC,IAAI,CAACC,GAAL,CACjBX,gCAAgC,CAACM,SAAD,EAAYC,UAAZ,CADf,CAAnB;EAGAD,SAAS,GAAGL,eAAe,CAACK,SAAD,EAAYE,IAAI,GAAGC,UAAnB,CAA3B,CAR4D,CAU5D;EACA;EACA;;EACA,MAAMG,wBAAwB,GAAGC,MAAM,CACrCd,UAAU,CAACO,SAAD,EAAYC,UAAZ,CAAV,KAAsC,CAACC,IADF,CAAvC;EAGA,MAAMM,MAAM,GAAGN,IAAI,IAAIC,UAAU,GAAGG,wBAAjB,CAAnB,CAhB4D,CAiB5D;;EACA,OAAOE,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;AACD,C,CAED;;AACA,eAAeX,wBAAf"},"metadata":{},"sourceType":"module"}