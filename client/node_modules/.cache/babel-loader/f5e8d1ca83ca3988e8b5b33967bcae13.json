{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devon\\\\OneDrive\\\\Documents\\\\GitHub\\\\final-project-xPurification\\\\client\\\\src\\\\pages\\\\ViewPost.js\",\n    _s = $RefreshSig$();\n\nimport './ViewPost.css';\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewPost = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    fetchPost();\n    fetchComments();\n  }, []);\n\n  const fetchPost = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('Posts').select('*').eq('id', id).single();\n\n    if (error) {\n      console.error('Error fetching post:', error.message);\n    } else {\n      // Calculate relative time\n      const createdTimeAgo = calculateTimeAgo(data.created_at); // Update post with relative time\n\n      setPost({ ...data,\n        created_at: createdTimeAgo\n      });\n    }\n  };\n\n  const calculateTimeAgo = timestamp => {\n    const now = new Date();\n    const createdAt = new Date(timestamp);\n    const diff = now - createdAt;\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n\n    if (months > 0) {\n      return `${months} month${months > 1 ? 's' : ''} ago`;\n    } else if (weeks > 0) {\n      return `${weeks} week${weeks > 1 ? 's' : ''} ago`;\n    } else if (days > 0) {\n      return `${days} day${days > 1 ? 's' : ''} ago`;\n    } else if (hours > 0) {\n      return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n    } else if (minutes > 0) {\n      return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\n    } else {\n      return `${seconds} second${seconds > 1 ? 's' : ''} ago`;\n    }\n  };\n\n  const fetchComments = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('Posts').select('comments').eq('id', id).single();\n\n      if (error) {\n        console.error('Error fetching comments:', error.message);\n      } else {\n        // Ensure comments data is an array\n        let commentsArray = [];\n\n        if (typeof data.comments === 'string') {\n          // Parse the string to convert it into an array\n          commentsArray = JSON.parse(data.comments);\n        } else if (Array.isArray(data.comments)) {\n          // If already an array, use it directly\n          commentsArray = data.comments;\n        } else {\n          console.error('Comments data is not an array:', data.comments);\n        } // Set the comments state\n\n\n        setComments(commentsArray);\n      }\n    } catch (error) {\n      console.error('Error fetching comments:', error.message);\n    }\n  };\n\n  const handleChange = event => {\n    setNewComment(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!newComment.trim()) return; // Combine new comment with existing comments\n\n    const updatedComments = [...comments, newComment];\n    await supabase.from('Posts').update({\n      comments: updatedComments\n    }).eq('id', id);\n    setComments(updatedComments);\n    setNewComment('');\n  };\n\n  const handleUpvote = async () => {\n    try {\n      // Increment the upvotes count by one\n      const updatedUpvotes = post.upvotes + 1; // Update the upvotes count in the database\n\n      await supabase.from('Posts').update({\n        upvotes: updatedUpvotes\n      }).eq('id', id); // Update the local state with the new upvotes count\n\n      setPost(prevPost => ({ ...prevPost,\n        upvotes: updatedUpvotes\n      }));\n    } catch (error) {\n      console.error('Error upvoting post:', error.message);\n    }\n  };\n\n  const deletePost = async () => {\n    try {\n      // Delete the post from the database\n      await supabase.from('Posts').delete().eq('id', id); // Redirect the user to the home page or another appropriate page\n      // Here, we'll just navigate back to the home page\n\n      window.location.href = '/';\n    } catch (error) {\n      console.error('Error deleting post:', error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ViewPost\",\n    children: post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"created_at\",\n        children: [\"Created \", post.created_at]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this), post.imageURL && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postImageContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.imageURL,\n          alt: \"Post\",\n          className: \"postImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postDetails\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"upvotes\",\n          children: [post.upvotes, \" upvotes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upvoteButton\",\n          onClick: handleUpvote,\n          children: \"\\uD83D\\uDC4D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/edit/${id}`,\n            className: \"editDeleteButtons\",\n            children: \"\\u270F\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"editDeleteButtons\",\n            onClick: deletePost,\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"comment\",\n              children: comment\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"3\",\n          cols: \"50\",\n          value: newComment,\n          onChange: handleChange,\n          placeholder: \"Add a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewPost, \"vYcnaA+MtnxynjUJ4gBxZblTQco=\", false, function () {\n  return [useParams];\n});\n\n_c = ViewPost;\nexport default ViewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","supabase","ViewPost","id","post","setPost","comments","setComments","newComment","setNewComment","fetchPost","fetchComments","data","error","from","select","eq","single","console","message","createdTimeAgo","calculateTimeAgo","created_at","timestamp","now","Date","createdAt","diff","seconds","Math","floor","minutes","hours","days","weeks","months","commentsArray","JSON","parse","Array","isArray","handleChange","event","target","value","handleSubmit","preventDefault","trim","updatedComments","update","handleUpvote","updatedUpvotes","upvotes","prevPost","deletePost","delete","window","location","href","title","content","imageURL","length","map","comment","index"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/src/pages/ViewPost.js"],"sourcesContent":["import './ViewPost.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { supabase } from '../client';\r\n\r\nconst ViewPost = () => {\r\n    const { id } = useParams();\r\n    const [post, setPost] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchPost();\r\n        fetchComments();\r\n    }, []);\r\n\r\n    const fetchPost = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Posts')\r\n            .select('*')\r\n            .eq('id', id)\r\n            .single();\r\n\r\n        if (error) {\r\n            console.error('Error fetching post:', error.message);\r\n        } else {\r\n            // Calculate relative time\r\n            const createdTimeAgo = calculateTimeAgo(data.created_at);\r\n            // Update post with relative time\r\n            setPost({ ...data, created_at: createdTimeAgo });\r\n        }\r\n    };\r\n\r\n    const calculateTimeAgo = (timestamp) => {\r\n        const now = new Date();\r\n        const createdAt = new Date(timestamp);\r\n        const diff = now - createdAt;\r\n        const seconds = Math.floor(diff / 1000);\r\n        const minutes = Math.floor(seconds / 60);\r\n        const hours = Math.floor(minutes / 60);\r\n        const days = Math.floor(hours / 24);\r\n        const weeks = Math.floor(days / 7);\r\n        const months = Math.floor(days / 30);\r\n        if (months > 0) {\r\n            return `${months} month${months > 1 ? 's' : ''} ago`;\r\n        } else if (weeks > 0) {\r\n            return `${weeks} week${weeks > 1 ? 's' : ''} ago`;\r\n        } else if (days > 0) {\r\n            return `${days} day${days > 1 ? 's' : ''} ago`;\r\n        } else if (hours > 0) {\r\n            return `${hours} hour${hours > 1 ? 's' : ''} ago`;\r\n        } else if (minutes > 0) {\r\n            return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\r\n        } else {\r\n            return `${seconds} second${seconds > 1 ? 's' : ''} ago`;\r\n        }\r\n    };\r\n\r\n    const fetchComments = async () => {\r\n        try {\r\n            const { data, error } = await supabase\r\n                .from('Posts')\r\n                .select('comments')\r\n                .eq('id', id)\r\n                .single();\r\n\r\n            if (error) {\r\n                console.error('Error fetching comments:', error.message);\r\n            } else {\r\n                // Ensure comments data is an array\r\n                let commentsArray = [];\r\n                if (typeof data.comments === 'string') {\r\n                    // Parse the string to convert it into an array\r\n                    commentsArray = JSON.parse(data.comments);\r\n                } else if (Array.isArray(data.comments)) {\r\n                    // If already an array, use it directly\r\n                    commentsArray = data.comments;\r\n                } else {\r\n                    console.error('Comments data is not an array:', data.comments);\r\n                }\r\n\r\n                // Set the comments state\r\n                setComments(commentsArray);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching comments:', error.message);\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setNewComment(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!newComment.trim()) return;\r\n\r\n        // Combine new comment with existing comments\r\n        const updatedComments = [...comments, newComment];\r\n\r\n        await supabase.from('Posts').update({ comments: updatedComments }).eq('id', id);\r\n\r\n        setComments(updatedComments);\r\n        setNewComment('');\r\n    };\r\n\r\n    const handleUpvote = async () => {\r\n        try {\r\n            // Increment the upvotes count by one\r\n            const updatedUpvotes = post.upvotes + 1;\r\n\r\n            // Update the upvotes count in the database\r\n            await supabase.from('Posts').update({ upvotes: updatedUpvotes }).eq('id', id);\r\n\r\n            // Update the local state with the new upvotes count\r\n            setPost(prevPost => ({ ...prevPost, upvotes: updatedUpvotes }));\r\n        } catch (error) {\r\n            console.error('Error upvoting post:', error.message);\r\n        }\r\n    };\r\n\r\n    const deletePost = async () => {\r\n        try {\r\n            // Delete the post from the database\r\n            await supabase.from('Posts').delete().eq('id', id);\r\n            // Redirect the user to the home page or another appropriate page\r\n            // Here, we'll just navigate back to the home page\r\n            window.location.href = '/';\r\n        } catch (error) {\r\n            console.error('Error deleting post:', error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"ViewPost\">\r\n            {post ? (\r\n                <div>\r\n                    <p className=\"created_at\">Created {post.created_at}</p>\r\n                    <h1>{post.title}</h1>\r\n                    <p>{post.content}</p>\r\n                    {post.imageURL && (\r\n                        <div className=\"postImageContainer\">\r\n                            <img src={post.imageURL} alt=\"Post\" className=\"postImage\" />\r\n                        </div>\r\n                    )}\r\n                    <div className=\"postDetails\">\r\n                        <p className=\"upvotes\">{post.upvotes} upvotes</p>\r\n                        <button className=\"upvoteButton\" onClick={handleUpvote}>👍</button>\r\n                        <div>\r\n                            <Link to={`/edit/${id}`} className=\"editDeleteButtons\">✏️</Link>\r\n                            <button className=\"editDeleteButtons\" onClick={deletePost}>🗑️</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {comments.length > 0 ? (\r\n                            <div>\r\n                                <h2>Comments:</h2>\r\n                                <ul>\r\n                                    {comments.map((comment, index) => (\r\n                                        <li key={index} className=\"comment\">{comment}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        ) : (\r\n                            <p>No comments yet.</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        <textarea\r\n                            rows=\"3\"\r\n                            cols=\"50\"\r\n                            value={newComment}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Add a comment...\"\r\n                        ></textarea>\r\n                        <br />\r\n                        <button type=\"submit\">Submit Comment</button>\r\n                    </form>\r\n                </div>\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}