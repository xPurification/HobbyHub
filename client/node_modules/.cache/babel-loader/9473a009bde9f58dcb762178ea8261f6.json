{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/devon/OneDrive/Documents/GitHub/HobbyHub/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"C:/Users/devon/OneDrive/Documents/GitHub/HobbyHub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/devon/OneDrive/Documents/GitHub/HobbyHub/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/devon/OneDrive/Documents/GitHub/HobbyHub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{supabase}from'../client';import Card from'../components/Card';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ReadPosts=function ReadPosts(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchQuery=_useState4[0],setSearchQuery=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),sortBy=_useState6[0],setSortBy=_useState6[1];useEffect(function(){fetchPosts();},[searchQuery,sortBy]);var fetchPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _yield$supabase$from$,data,error;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return supabase.from('Posts').select('*');case 2:_yield$supabase$from$=_context.sent;data=_yield$supabase$from$.data;error=_yield$supabase$from$.error;if(error){console.error('Error fetching posts:',error.message);}else{// Filter posts based on search query\nif(searchQuery.trim()!==''){data=data.filter(function(post){return post.title.toLowerCase().includes(searchQuery.toLowerCase());});}// Sort posts based on sortBy option\nif(sortBy==='created_at'){data=data.sort(function(a,b){return new Date(b.created_at)-new Date(a.created_at);});}else if(sortBy==='upvotes'){data=data.sort(function(a,b){return b.upvotes-a.upvotes;});}// Format the created_at timestamps\ndata=data.map(function(post){return _objectSpread(_objectSpread({},post),{},{created_at:formatTimestamp(post.created_at)});});setPosts(data);}case 6:case\"end\":return _context.stop();}}},_callee);}));return function fetchPosts(){return _ref.apply(this,arguments);};}();var formatTimestamp=function formatTimestamp(timestamp){var now=new Date();var createdAt=new Date(timestamp);var diff=now.getTime()-createdAt.getTime();// Difference in milliseconds\nvar seconds=Math.floor(diff/1000);var minutes=Math.floor(seconds/60);var hours=Math.floor(minutes/60);var days=Math.floor(hours/24);var weeks=Math.floor(days/7);var months=Math.floor(days/30);if(months>0){return\"\".concat(months,\" month\").concat(months>1?'s':'',\" ago\");}else if(weeks>0){return\"\".concat(weeks,\" week\").concat(weeks>1?'s':'',\" ago\");}else if(days>0){return\"\".concat(days,\" day\").concat(days>1?'s':'',\" ago\");}else if(hours>0){return\"\".concat(hours,\" hour\").concat(hours>1?'s':'',\" ago\");}else if(minutes>0){return\"\".concat(minutes,\" minute\").concat(minutes>1?'s':'',\" ago\");}else{return\"\".concat(seconds,\" second\").concat(seconds>1?'s':'',\" ago\");}};var handleSearchChange=function handleSearchChange(event){setSearchQuery(event.target.value);};var handleSortBy=function handleSortBy(sortByOption){setSortBy(sortByOption);};return/*#__PURE__*/_jsxs(\"div\",{className:\"ReadPosts\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search...\",value:searchQuery,onChange:handleSearchChange}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Order by: \"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleSortBy('created_at');},children:\"Newest\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleSortBy('upvotes');},children:\"Most Popular\"})]}),posts.length>0?posts.map(function(post){return/*#__PURE__*/_jsx(Card,_objectSpread({},post),post.id);}):/*#__PURE__*/_jsx(\"h2\",{children:\"No Posts Found\"})]});};export default ReadPosts;","map":{"version":3,"names":["React","useState","useEffect","supabase","Card","ReadPosts","posts","setPosts","searchQuery","setSearchQuery","sortBy","setSortBy","fetchPosts","from","select","data","error","console","message","trim","filter","post","title","toLowerCase","includes","sort","a","b","Date","created_at","upvotes","map","formatTimestamp","timestamp","now","createdAt","diff","getTime","seconds","Math","floor","minutes","hours","days","weeks","months","handleSearchChange","event","target","value","handleSortBy","sortByOption","length","id"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/HobbyHub/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../client';\nimport Card from '../components/Card';\n\nconst ReadPosts = () => {\n    const [posts, setPosts] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [sortBy, setSortBy] = useState(null);\n\n    useEffect(() => {\n        fetchPosts();\n    }, [searchQuery, sortBy]);\n\n    const fetchPosts = async () => {\n        let { data, error } = await supabase.from('Posts').select('*');\n        if (error) {\n            console.error('Error fetching posts:', error.message);\n        } else {\n            // Filter posts based on search query\n            if (searchQuery.trim() !== '') {\n                data = data.filter(post =>\n                    post.title.toLowerCase().includes(searchQuery.toLowerCase())\n                );\n            }\n            // Sort posts based on sortBy option\n            if (sortBy === 'created_at') {\n                data = data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n            } else if (sortBy === 'upvotes') {\n                data = data.sort((a, b) => b.upvotes - a.upvotes);\n            }\n            // Format the created_at timestamps\n            data = data.map(post => ({\n                ...post,\n                created_at: formatTimestamp(post.created_at)\n            }));\n            setPosts(data);\n        }\n    };\n\n    const formatTimestamp = (timestamp) => {\n        const now = new Date();\n        const createdAt = new Date(timestamp);\n        const diff = now.getTime() - createdAt.getTime(); // Difference in milliseconds\n        const seconds = Math.floor(diff / 1000);\n        const minutes = Math.floor(seconds / 60);\n        const hours = Math.floor(minutes / 60);\n        const days = Math.floor(hours / 24);\n        const weeks = Math.floor(days / 7);\n        const months = Math.floor(days / 30);\n        if (months > 0) {\n            return `${months} month${months > 1 ? 's' : ''} ago`;\n        } else if (weeks > 0) {\n            return `${weeks} week${weeks > 1 ? 's' : ''} ago`;\n        } else if (days > 0) {\n            return `${days} day${days > 1 ? 's' : ''} ago`;\n        } else if (hours > 0) {\n            return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n        } else if (minutes > 0) {\n            return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\n        } else {\n            return `${seconds} second${seconds > 1 ? 's' : ''} ago`;\n        }\n    };\n    const handleSearchChange = (event) => {\n        setSearchQuery(event.target.value);\n    };\n\n    const handleSortBy = (sortByOption) => {\n        setSortBy(sortByOption);\n    };\n\n    return (\n        <div className=\"ReadPosts\">\n            <input\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={searchQuery}\n                onChange={handleSearchChange}\n            />\n            <div>\n                <p>Order by: </p>\n                <button onClick={() => handleSortBy('created_at')}>Newest</button>\n                <button onClick={() => handleSortBy('upvotes')}>Most Popular</button>\n            </div>\n            {posts.length > 0 ? (\n                posts.map((post) => <Card key={post.id} {...post} />)\n            ) : (\n                <h2>No Posts Found</h2>\n            )}\n        </div>\n    );\n};\n\nexport default ReadPosts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}