{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devon\\\\OneDrive\\\\Documents\\\\GitHub\\\\final-project-xPurification\\\\client\\\\src\\\\pages\\\\ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../client';\nimport Card from '../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]); // Function to fetch posts data\n\n  const fetchPosts = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('Posts').select('*');\n\n    if (error) {\n      console.error('Error fetching posts:', error.message);\n    } else {\n      setPosts(data);\n    }\n  }; // useEffect to fetch posts data\n\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Card, { ...post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Card","ReadPosts","posts","setPosts","fetchPosts","data","error","from","select","console","message","map","post","id"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../client'\nimport Card from '../components/Card';\n\nconst ReadPosts = () => {\n    const [posts, setPosts] = useState([]);\n\n    // Function to fetch posts data\n    const fetchPosts = async () => {\n        const { data, error } = await supabase.from('Posts').select('*');\n        if (error) {\n            console.error('Error fetching posts:', error.message);\n        } else {\n            setPosts(data);\n        }\n    };\n\n    // useEffect to fetch posts data\n    useEffect(() => {\n        fetchPosts();\n    }, []);\n\n    return (\n        <div className=\"ReadPosts\">\n            {posts.map(post => (\n                <Card key={post.id} {...post} />\n            ))}\n        </div>\n    );\n};\n\n\nexport default ReadPosts;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CADoB,CAGpB;;EACA,MAAMO,UAAU,GAAG,YAAY;IAC3B,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkB,MAAMP,QAAQ,CAACQ,IAAT,CAAc,OAAd,EAAuBC,MAAvB,CAA8B,GAA9B,CAA9B;;IACA,IAAIF,KAAJ,EAAW;MACPG,OAAO,CAACH,KAAR,CAAc,uBAAd,EAAuCA,KAAK,CAACI,OAA7C;IACH,CAFD,MAEO;MACHP,QAAQ,CAACE,IAAD,CAAR;IACH;EACJ,CAPD,CAJoB,CAapB;;;EACAP,SAAS,CAAC,MAAM;IACZM,UAAU;EACb,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,UACKF,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACX,QAAC,IAAD,OAAwBA;IAAxB,GAAWA,IAAI,CAACC,EAAhB;MAAA;MAAA;MAAA;IAAA,QADH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAzBD;;GAAMZ,S;;KAAAA,S;AA4BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}