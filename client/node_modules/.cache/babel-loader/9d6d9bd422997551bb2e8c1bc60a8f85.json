{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devon\\\\OneDrive\\\\Documents\\\\GitHub\\\\final-project-xPurification\\\\client\\\\src\\\\pages\\\\ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../client';\nimport Card from '../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [sortBy, setSortBy] = useState(null);\n  useEffect(() => {\n    fetchPosts();\n  }, [sortBy]);\n\n  const fetchPosts = async () => {\n    let {\n      data,\n      error\n    } = await supabase.from('Posts').select('*');\n\n    if (error) {\n      console.error('Error fetching posts:', error.message);\n    } else {\n      if (sortBy === 'created_at') {\n        data = data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n      } else if (sortBy === 'upvotes') {\n        data = data.sort((a, b) => b.upvotes - a.upvotes);\n      }\n\n      setPosts(data);\n    }\n  };\n\n  const handleSortBy = sortByOption => {\n    setSortBy(sortByOption);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Filters:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSortBy('created_at'),\n        children: \"Sort by Created Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSortBy('upvotes'),\n        children: \"Sort by Upvotes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(Card, { ...post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No Posts Yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"f1TZyMtnDOGHKhVIlWyFzQLgdzs=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Card","ReadPosts","posts","setPosts","sortBy","setSortBy","fetchPosts","data","error","from","select","console","message","sort","a","b","Date","created_at","upvotes","handleSortBy","sortByOption","length","map","post","id"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../client';\nimport Card from '../components/Card';\n\nconst ReadPosts = () => {\n    const [posts, setPosts] = useState([]);\n    const [sortBy, setSortBy] = useState(null);\n\n    useEffect(() => {\n        fetchPosts();\n    }, [sortBy]);\n\n    const fetchPosts = async () => {\n        let { data, error } = await supabase.from('Posts').select('*');\n        if (error) {\n            console.error('Error fetching posts:', error.message);\n        } else {\n            if (sortBy === 'created_at') {\n                data = data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n            } else if (sortBy === 'upvotes') {\n                data = data.sort((a, b) => b.upvotes - a.upvotes);\n            }\n            setPosts(data);\n        }\n    };\n\n    const handleSortBy = (sortByOption) => {\n        setSortBy(sortByOption);\n    };\n\n    return (\n        <div className=\"ReadPosts\">\n            <div>\n                <p>Filters:</p>\n                <button onClick={() => handleSortBy('created_at')}>Sort by Created Time</button>\n                <button onClick={() => handleSortBy('upvotes')}>Sort by Upvotes</button>\n            </div>\n            {posts.length > 0 ? (\n                posts.map((post) => <Card key={post.id} {...post} />)\n            ) : (\n                <h2>No Posts Yet</h2>\n            )}\n        </div>\n    );\n};\n\nexport default ReadPosts;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACZQ,UAAU;EACb,CAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;;EAIA,MAAME,UAAU,GAAG,YAAY;IAC3B,IAAI;MAAEC,IAAF;MAAQC;IAAR,IAAkB,MAAMT,QAAQ,CAACU,IAAT,CAAc,OAAd,EAAuBC,MAAvB,CAA8B,GAA9B,CAA5B;;IACA,IAAIF,KAAJ,EAAW;MACPG,OAAO,CAACH,KAAR,CAAc,uBAAd,EAAuCA,KAAK,CAACI,OAA7C;IACH,CAFD,MAEO;MACH,IAAIR,MAAM,KAAK,YAAf,EAA6B;QACzBG,IAAI,GAAGA,IAAI,CAACM,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASD,CAAC,CAACE,UAAX,IAAyB,IAAID,IAAJ,CAASF,CAAC,CAACG,UAAX,CAA7C,CAAP;MACH,CAFD,MAEO,IAAIb,MAAM,KAAK,SAAf,EAA0B;QAC7BG,IAAI,GAAGA,IAAI,CAACM,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACG,OAAF,GAAYJ,CAAC,CAACI,OAAlC,CAAP;MACH;;MACDf,QAAQ,CAACI,IAAD,CAAR;IACH;EACJ,CAZD;;EAcA,MAAMY,YAAY,GAAIC,YAAD,IAAkB;IACnCf,SAAS,CAACe,YAAD,CAAT;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,OAAO,EAAE,MAAMD,YAAY,CAAC,YAAD,CAAnC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAQ,OAAO,EAAE,MAAMA,YAAY,CAAC,SAAD,CAAnC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAMKjB,KAAK,CAACmB,MAAN,GAAe,CAAf,GACGnB,KAAK,CAACoB,GAAN,CAAWC,IAAD,iBAAU,QAAC,IAAD,OAAwBA;IAAxB,GAAWA,IAAI,CAACC,EAAhB;MAAA;MAAA;MAAA;IAAA,QAApB,CADH,gBAGG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CAxCD;;GAAMvB,S;;KAAAA,S;AA0CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}