{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devon\\\\OneDrive\\\\Documents\\\\GitHub\\\\final-project-xPurification\\\\client\\\\src\\\\pages\\\\ViewPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewPost = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    fetchPost();\n    fetchComments();\n  }, []);\n\n  const fetchPost = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('Posts').select('*').eq('id', id).single();\n\n    if (error) {\n      console.error('Error fetching post:', error.message);\n    } else {\n      setPost(data);\n    }\n  };\n\n  const fetchComments = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('Posts').select('comments').eq('id', id).single();\n\n    if (error) {\n      console.error('Error fetching comments:', error.message);\n    } else {\n      if (typeof data.comments === 'string') {\n        const commentsArray = data.comments.split(',');\n        setComments(commentsArray);\n      } else {\n        console.error('Comments data is not a string:', data.comments);\n      }\n    }\n  };\n\n  const handleChange = event => {\n    setNewComment(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!newComment.trim()) return; // Process new comment (e.g., split by newline character)\n\n    const processedNewComment = newComment.split('\\n'); // Combine new comment with existing comments\n\n    const updatedComments = [...comments, ...processedNewComment];\n    await supabase.from('Posts').update({\n      comments: updatedComments\n    }).eq('id', id);\n    setComments(updatedComments);\n    setNewComment('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ViewPost\",\n    children: post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created at: \", post.created_at]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), post.imageURL && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.imageURL,\n        alt: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Upvotes: \", post.upvotes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/edit/${id}`,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"3\",\n          cols: \"50\",\n          value: newComment,\n          onChange: handleChange,\n          placeholder: \"Add a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: comment\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewPost, \"vYcnaA+MtnxynjUJ4gBxZblTQco=\", false, function () {\n  return [useParams];\n});\n\n_c = ViewPost;\nexport default ViewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","supabase","ViewPost","id","post","setPost","comments","setComments","newComment","setNewComment","fetchPost","fetchComments","data","error","from","select","eq","single","console","message","commentsArray","split","handleChange","event","target","value","handleSubmit","preventDefault","trim","processedNewComment","updatedComments","update","created_at","title","content","imageURL","upvotes","length","map","comment","index"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/src/pages/ViewPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { supabase } from '../client';\r\n\r\nconst ViewPost = () => {\r\n    const { id } = useParams();\r\n    const [post, setPost] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchPost();\r\n        fetchComments();\r\n    }, []);\r\n\r\n    const fetchPost = async () => {\r\n        const { data, error } = await supabase\r\n          .from('Posts')\r\n          .select('*')\r\n          .eq('id', id)\r\n          .single();\r\n\r\n        if (error) {\r\n          console.error('Error fetching post:', error.message);\r\n        } else {\r\n          setPost(data);\r\n        }\r\n    };\r\n\r\n    const fetchComments = async () => {\r\n        const { data, error } = await supabase\r\n          .from('Posts')\r\n          .select('comments')\r\n          .eq('id', id)\r\n          .single();\r\n\r\n        if (error) {\r\n          console.error('Error fetching comments:', error.message);\r\n        } else {\r\n          if (typeof data.comments === 'string') {\r\n            const commentsArray = data.comments.split(',');\r\n            setComments(commentsArray);\r\n          } else {\r\n            console.error('Comments data is not a string:', data.comments);\r\n          }\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setNewComment(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n    \r\n        if (!newComment.trim()) return;\r\n    \r\n        // Process new comment (e.g., split by newline character)\r\n        const processedNewComment = newComment.split('\\n');\r\n    \r\n        // Combine new comment with existing comments\r\n        const updatedComments = [...comments, ...processedNewComment];\r\n    \r\n        await supabase.from('Posts').update({ comments: updatedComments }).eq('id', id);\r\n    \r\n        setComments(updatedComments);\r\n        setNewComment('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"ViewPost\">\r\n            {post ? (\r\n                <div>\r\n                    <p>Created at: {post.created_at}</p>\r\n                    <h1>{post.title}</h1>\r\n                    <p>{post.content}</p>\r\n                    {post.imageURL && <img src={post.imageURL} alt=\"Post\" />}\r\n                    <p>Upvotes: {post.upvotes}</p>\r\n                    <Link to={`/edit/${id}`}>Edit</Link>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <textarea\r\n                            rows=\"3\"\r\n                            cols=\"50\"\r\n                            value={newComment}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Add a comment...\"\r\n                        ></textarea>\r\n                        <br />\r\n                        <button type=\"submit\">Submit</button>\r\n                    </form>\r\n                    <div>\r\n                        <h2>Comments:</h2>\r\n                        {comments.length > 0 ? (\r\n                            <ul>\r\n                                {comments.map((comment, index) => (\r\n                                    <li key={index}>{comment}</li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>No comments yet.</p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}