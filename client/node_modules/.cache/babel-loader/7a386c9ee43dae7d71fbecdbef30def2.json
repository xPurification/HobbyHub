{"ast":null,"code":"import _defineProperty from\"C:/Users/devon/OneDrive/Documents/GitHub/HobbyHub/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/devon/OneDrive/Documents/GitHub/HobbyHub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:/Users/devon/OneDrive/Documents/GitHub/HobbyHub/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/devon/OneDrive/Documents/GitHub/HobbyHub/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/devon/OneDrive/Documents/GitHub/HobbyHub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{supabase}from'../client';import{useParams}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditPost=function EditPost(){var _useParams=useParams(),id=_useParams.id;var _useState=useState({title:'',content:'',imageURL:''}),_useState2=_slicedToArray(_useState,2),post=_useState2[0],setPost=_useState2[1];useEffect(function(){var fetchPost=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _yield$supabase$from$,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return supabase.from('Posts').select().eq('id',id).single();case 2:_yield$supabase$from$=_context.sent;data=_yield$supabase$from$.data;setPost(data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchPost(){return _ref.apply(this,arguments);};}();fetchPost();},[id]);var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setPost(function(prev){return _objectSpread(_objectSpread({},prev),{},_defineProperty({},name,value));});};var updatePost=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event){var postData;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();// Construct the data to be updated\npostData={title:post.title,content:post.content,imageURL:post.imageURL};// Update post in the database\n_context2.next=4;return supabase.from('Posts').update(postData).eq('id',id);case 4:// Redirect back to the post page after updating\nwindow.location.href=\"/\";case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function updatePost(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:updatePost,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"title\",name:\"title\",placeholder:\"Title\",value:post.title// Populate with post title\n,onChange:handleChange}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{rows:\"5\",cols:\"50\",id:\"content\",name:\"content\",placeholder:\"Content (Optional)\",value:post.content// Populate with post content\n,onChange:handleChange}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"imageURL\",name:\"imageURL\",placeholder:\"Image URL (Optional)\",value:post.imageURL// Populate with post image URL\n,onChange:handleChange}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Update Post\",method:\"POST\"})]})});};export default EditPost;","map":{"version":3,"names":["React","useState","useEffect","supabase","useParams","EditPost","id","title","content","imageURL","post","setPost","fetchPost","from","select","eq","single","data","handleChange","event","target","name","value","prev","updatePost","preventDefault","postData","update","window","location","href"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/HobbyHub/client/src/pages/EditPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../client';\nimport { useParams } from 'react-router-dom';\n\nconst EditPost = () => {\n  const { id } = useParams();\n  const [post, setPost] = useState({ title: '', content: '', imageURL: '' });\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      const { data } = await supabase\n        .from('Posts')\n        .select()\n        .eq('id', id)\n        .single();\n\n      setPost(data);\n    };\n\n    fetchPost();\n  }, [id]);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setPost((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const updatePost = async (event) => {\n    event.preventDefault();\n    // Construct the data to be updated\n    const postData = { title: post.title, content: post.content, imageURL: post.imageURL };\n\n    // Update post in the database\n    await supabase.from('Posts').update(postData).eq('id', id);\n\n    // Redirect back to the post page after updating\n    window.location.href = `/`;\n};\n\n  return (\n    <div>\n      <form onSubmit={updatePost}>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={post.title} // Populate with post title\n          onChange={handleChange}\n        />\n        <br />\n        <br />\n        <textarea\n          rows=\"5\"\n          cols=\"50\"\n          id=\"content\"\n          name=\"content\"\n          placeholder=\"Content (Optional)\"\n          value={post.content} // Populate with post content\n          onChange={handleChange}\n        ></textarea>\n        <br />\n        <br />\n        <input\n          type=\"text\"\n          id=\"imageURL\"\n          name=\"imageURL\"\n          placeholder=\"Image URL (Optional)\"\n          value={post.imageURL} // Populate with post image URL\n          onChange={handleChange}\n        />\n        <br />\n        <br />\n        <input type=\"submit\" value=\"Update Post\" method=\"POST\"/>\n      </form>\n    </div>\n  );\n};\n\nexport default EditPost;\n"],"mappings":"utBAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,QAAT,KAAyB,WAAzB,CACA,OAASC,SAAT,KAA0B,kBAA1B,C,wFAEA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,EAAM,CACrB,eAAeD,SAAS,EAAxB,CAAQE,EAAR,YAAQA,EAAR,CACA,cAAwBL,QAAQ,CAAC,CAAEM,KAAK,CAAE,EAAT,CAAaC,OAAO,CAAE,EAAtB,CAA0BC,QAAQ,CAAE,EAApC,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAEAT,SAAS,CAAC,UAAM,CACd,GAAMU,UAAS,4FAAG,0LACOT,SAAQ,CAC5BU,IADoB,CACf,OADe,EAEpBC,MAFoB,GAGpBC,EAHoB,CAGjB,IAHiB,CAGXT,EAHW,EAIpBU,MAJoB,EADP,4CACRC,IADQ,uBACRA,IADQ,CAOhBN,OAAO,CAACM,IAAD,CAAP,CAPgB,sDAAH,kBAATL,UAAS,0CAAf,CAUAA,SAAS,GACV,CAZQ,CAYN,CAACN,EAAD,CAZM,CAAT,CAcA,GAAMY,aAAY,CAAG,QAAfA,aAAe,CAACC,KAAD,CAAW,CAC9B,kBAAwBA,KAAK,CAACC,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CACAX,OAAO,CAAC,SAACY,IAAD,wCACHA,IADG,wBAELF,IAFK,CAEEC,KAFF,IAAD,CAAP,CAID,CAND,CAQA,GAAME,WAAU,6FAAG,kBAAOL,KAAP,qIACjBA,KAAK,CAACM,cAAN,GACA;AACMC,QAHW,CAGA,CAAEnB,KAAK,CAAEG,IAAI,CAACH,KAAd,CAAqBC,OAAO,CAAEE,IAAI,CAACF,OAAnC,CAA4CC,QAAQ,CAAEC,IAAI,CAACD,QAA3D,CAHA,CAKjB;AALiB,uBAMXN,SAAQ,CAACU,IAAT,CAAc,OAAd,EAAuBc,MAAvB,CAA8BD,QAA9B,EAAwCX,EAAxC,CAA2C,IAA3C,CAAiDT,EAAjD,CANW,QAQjB;AACAsB,MAAM,CAACC,QAAP,CAAgBC,IAAhB,KATiB,wDAAH,kBAAVN,WAAU,6CAAhB,CAYA,mBACE,kCACE,cAAM,QAAQ,CAAEA,UAAhB,wBACE,cACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,OAFL,CAGE,IAAI,CAAC,OAHP,CAIE,WAAW,CAAC,OAJd,CAKE,KAAK,CAAEd,IAAI,CAACH,KAAO;AALrB,CAME,QAAQ,CAAEW,YANZ,EADF,cASE,aATF,cAUE,aAVF,cAWE,iBACE,IAAI,CAAC,GADP,CAEE,IAAI,CAAC,IAFP,CAGE,EAAE,CAAC,SAHL,CAIE,IAAI,CAAC,SAJP,CAKE,WAAW,CAAC,oBALd,CAME,KAAK,CAAER,IAAI,CAACF,OAAS;AANvB,CAOE,QAAQ,CAAEU,YAPZ,EAXF,cAoBE,aApBF,cAqBE,aArBF,cAsBE,cACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,UAFL,CAGE,IAAI,CAAC,UAHP,CAIE,WAAW,CAAC,sBAJd,CAKE,KAAK,CAAER,IAAI,CAACD,QAAU;AALxB,CAME,QAAQ,CAAES,YANZ,EAtBF,cA8BE,aA9BF,cA+BE,aA/BF,cAgCE,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,aAA3B,CAAyC,MAAM,CAAC,MAAhD,EAhCF,GADF,EADF,CAsCD,CA5ED,CA8EA,cAAeb,SAAf"},"metadata":{},"sourceType":"module"}