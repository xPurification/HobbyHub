{"ast":null,"code":"import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n/**\n * @name lastDayOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of an ISO week-numbering year\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * const result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\n\nexport function lastDayOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n\n  const _date = startOfISOWeek(fourthOfJanuary);\n\n  _date.setDate(_date.getDate() - 1);\n\n  return _date;\n} // Fallback for modularized imports:\n\nexport default lastDayOfISOWeekYear;","map":{"version":3,"names":["getISOWeekYear","startOfISOWeek","constructFrom","lastDayOfISOWeekYear","date","year","fourthOfJanuary","setFullYear","setHours","_date","setDate","getDate"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/node_modules/date-fns/lastDayOfISOWeekYear.mjs"],"sourcesContent":["import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name lastDayOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of an ISO week-numbering year\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * const result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\nexport function lastDayOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  const _date = startOfISOWeek(fourthOfJanuary);\n  _date.setDate(_date.getDate() - 1);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default lastDayOfISOWeekYear;\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,sBAA/B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;EACzC,MAAMC,IAAI,GAAGL,cAAc,CAACI,IAAD,CAA3B;EACA,MAAME,eAAe,GAAGJ,aAAa,CAACE,IAAD,EAAO,CAAP,CAArC;EACAE,eAAe,CAACC,WAAhB,CAA4BF,IAAI,GAAG,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC;EACAC,eAAe,CAACE,QAAhB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;;EACA,MAAMC,KAAK,GAAGR,cAAc,CAACK,eAAD,CAA5B;;EACAG,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,OAAN,KAAkB,CAAhC;;EACA,OAAOF,KAAP;AACD,C,CAED;;AACA,eAAeN,oBAAf"},"metadata":{},"sourceType":"module"}