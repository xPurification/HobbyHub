{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devon\\\\OneDrive\\\\Documents\\\\GitHub\\\\final-project-xPurification\\\\client\\\\src\\\\pages\\\\ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../client';\nimport Card from '../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]); // Function to update posts data\n\n  const updatePosts = updatedPost => {\n    // Update posts state with the updated post data\n    setPosts(prevPosts => prevPosts.map(post => post.id === updatedPost.id ? updatedPost : post));\n  }; // useEffect to fetch posts data\n\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Card, { ...post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Card","ReadPosts","posts","setPosts","updatePosts","updatedPost","prevPosts","map","post","id","fetchPosts"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../client'\nimport Card from '../components/Card';\n\nconst ReadPosts = () => {\n    const [posts, setPosts] = useState([]);\n\n    // Function to update posts data\n    const updatePosts = (updatedPost) => {\n        // Update posts state with the updated post data\n        setPosts(prevPosts => prevPosts.map(post => post.id === updatedPost.id ? updatedPost : post));\n    };\n\n    // useEffect to fetch posts data\n    useEffect(() => {\n        fetchPosts();\n    }, []);\n\n    return (\n        <div className=\"ReadPosts\">\n            {posts.map(post => (\n                <Card key={post.id} {...post} />\n            ))}\n        </div>\n    );\n};\n\nexport default ReadPosts;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CADoB,CAGpB;;EACA,MAAMO,WAAW,GAAIC,WAAD,IAAiB;IACjC;IACAF,QAAQ,CAACG,SAAS,IAAIA,SAAS,CAACC,GAAV,CAAcC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,WAAW,CAACI,EAAxB,GAA6BJ,WAA7B,GAA2CG,IAAjE,CAAd,CAAR;EACH,CAHD,CAJoB,CASpB;;;EACAV,SAAS,CAAC,MAAM;IACZY,UAAU;EACb,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,UACKR,KAAK,CAACK,GAAN,CAAUC,IAAI,iBACX,QAAC,IAAD,OAAwBA;IAAxB,GAAWA,IAAI,CAACC,EAAhB;MAAA;MAAA;MAAA;IAAA,QADH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CArBD;;GAAMR,S;;KAAAA,S;AAuBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}