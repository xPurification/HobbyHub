{"ast":null,"code":"import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"]\n};\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"]\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  wide: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n};\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n};\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  }\n};\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  }\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n\n      case 2:\n        return number + \"nd\";\n\n      case 3:\n        return number + \"rd\";\n    }\n  }\n\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\"\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: quarter => quarter - 1\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\"\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\"\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\"\n  })\n};","map":{"version":3,"names":["buildLocalizeFn","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","short","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","dirtyNumber","_options","number","Number","rem100","localize","era","values","defaultWidth","quarter","argumentCallback","month","day","dayPeriod","formattingValues","defaultFormattingWidth"],"sources":["C:/Users/devon/OneDrive/Documents/GitHub/final-project-xPurification/client/node_modules/date-fns/locale/en-US/_lib/localize.mjs"],"sourcesContent":["import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}